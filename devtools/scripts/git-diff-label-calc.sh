#!/bin/sh
set -e

# Outputs a label based on the size of the diff between the current branch and the main branch.

# env setting defaults
if [ -z "$MAIN_BRANCH" ]; then
    MAIN_BRANCH=main
fi
if [ -z "$FAIL_IF_XL" ]; then
    FAIL_IF_XL=0
fi

# const settings
IGNORE_PATTERN_FILE=.labelignore
XS_LABEL=size/xs
XS_SIZE=20
S_LABEL=size/s
S_SIZE=100
M_LABEL=size/m
M_SIZE=250
L_LABEL=size/l
L_SIZE=500
XL_LABEL=size/xl

# Get a list of files including the "generated by" header, then filter them out by only those with DO NOT EDIT on the first line, in case we have code in the repo that does the generation.
EXCLUDE_GENERATED_FILES=$(git grep -l -e 'generated by .* DO NOT EDIT' | xargs -I{} sh -c 'head -n 1 {} | grep -q "DO NOT EDIT" && echo {}' | sed 's/^/:\(exclude\)/')

EXCLUDE_IGNORED_PATTERNS=$(cat "$IGNORE_PATTERN_FILE" 2>/dev/null | sed 's/^/:\(exclude\)/')

# Perform diff for merging to the main branch:
# --ignore-blank-lines: ignore changes that only involve blank lines
# --shortstat: output only the summary of the changes
# -w: ignore whitespace
# --diff-filter=d: exclude deleted files
# --minimal: produce the smallest diff possible
# --merge-base: find the common ancestor of the current branch and the main branch
# $EXCLUDE_GENERATED_FILES: exclude generated files
# $EXCLUDE_IGNORED_PATTERNS: exclude files that match the patterns in the .labelignore file
OUTPUT=$(git diff --ignore-blank-lines --shortstat -w --diff-filter=d --minimal --merge-base "origin/$MAIN_BRANCH" -- $EXCLUDE_GENERATED_FILES $EXCLUDE_IGNORED_PATTERNS)

sum=$(
    echo "$OUTPUT" | awk '
    { 
        insertions = deletions = 0
        for (i = 1; i <= NF; i++) {
            if ($i ~ /insertions\(\+\)/) insertions = $(i-1)
            if ($i ~ /deletions\(-\)/) deletions = $(i-1)
        }
        print insertions + deletions
    }'
)

echo "Output: $OUTPUT" >&2
echo "Changes: $sum" >&2

LABEL=""
if [ $sum -le $XS_SIZE ]; then
    LABEL=$XS_LABEL
elif [ $sum -le $S_SIZE ]; then
    LABEL=$S_LABEL
elif [ $sum -le $M_SIZE ]; then
    LABEL=$M_LABEL
elif [ $sum -le $L_SIZE ]; then
    LABEL=$L_LABEL
else
    LABEL=$XL_LABEL
fi

echo "Label:   $LABEL" >&2

if [ $FAIL_IF_XL -eq 1 ] && [ "$LABEL" = "$XL_LABEL" ]; then
    echo ""
    echo "ERROR: This PR exceeds the maximum size of $L_SIZE lines."
    echo "Please make sure you are NOT addressing multiple issues with one PR."
    exit 1
fi

echo "$LABEL"
