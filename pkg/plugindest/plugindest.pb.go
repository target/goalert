// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.0
// source: pkg/plugindest/plugindest.proto

package plugindest

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AlertState int32

const (
	AlertState_alert_state_unknown        AlertState = 0
	AlertState_alert_state_unacknowledged AlertState = 1
	AlertState_alert_state_acknowledged   AlertState = 2
	AlertState_alert_state_closed         AlertState = 3
)

// Enum value maps for AlertState.
var (
	AlertState_name = map[int32]string{
		0: "alert_state_unknown",
		1: "alert_state_unacknowledged",
		2: "alert_state_acknowledged",
		3: "alert_state_closed",
	}
	AlertState_value = map[string]int32{
		"alert_state_unknown":        0,
		"alert_state_unacknowledged": 1,
		"alert_state_acknowledged":   2,
		"alert_state_closed":         3,
	}
)

func (x AlertState) Enum() *AlertState {
	p := new(AlertState)
	*p = x
	return p
}

func (x AlertState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertState) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_plugindest_plugindest_proto_enumTypes[0].Descriptor()
}

func (AlertState) Type() protoreflect.EnumType {
	return &file_pkg_plugindest_plugindest_proto_enumTypes[0]
}

func (x AlertState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertState.Descriptor instead.
func (AlertState) EnumDescriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{0}
}

type SentMessageState int32

const (
	SentMessageState_msg_state_unknown     SentMessageState = 0
	SentMessageState_msg_state_sending     SentMessageState = 1
	SentMessageState_msg_state_pending     SentMessageState = 2
	SentMessageState_msg_state_sent        SentMessageState = 3
	SentMessageState_msg_state_delivered   SentMessageState = 4
	SentMessageState_msg_state_failed_temp SentMessageState = 5
	SentMessageState_msg_state_failed_perm SentMessageState = 6
	SentMessageState_msg_state_bundled     SentMessageState = 7
)

// Enum value maps for SentMessageState.
var (
	SentMessageState_name = map[int32]string{
		0: "msg_state_unknown",
		1: "msg_state_sending",
		2: "msg_state_pending",
		3: "msg_state_sent",
		4: "msg_state_delivered",
		5: "msg_state_failed_temp",
		6: "msg_state_failed_perm",
		7: "msg_state_bundled",
	}
	SentMessageState_value = map[string]int32{
		"msg_state_unknown":     0,
		"msg_state_sending":     1,
		"msg_state_pending":     2,
		"msg_state_sent":        3,
		"msg_state_delivered":   4,
		"msg_state_failed_temp": 5,
		"msg_state_failed_perm": 6,
		"msg_state_bundled":     7,
	}
)

func (x SentMessageState) Enum() *SentMessageState {
	p := new(SentMessageState)
	*p = x
	return p
}

func (x SentMessageState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SentMessageState) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_plugindest_plugindest_proto_enumTypes[1].Descriptor()
}

func (SentMessageState) Type() protoreflect.EnumType {
	return &file_pkg_plugindest_plugindest_proto_enumTypes[1]
}

func (x SentMessageState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SentMessageState.Descriptor instead.
func (SentMessageState) EnumDescriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{1}
}

type FieldLabelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         *KeyValue              `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldLabelRequest) Reset() {
	*x = FieldLabelRequest{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldLabelRequest) ProtoMessage() {}

func (x *FieldLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldLabelRequest.ProtoReflect.Descriptor instead.
func (*FieldLabelRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{0}
}

func (x *FieldLabelRequest) GetField() *KeyValue {
	if x != nil {
		return x.Field
	}
	return nil
}

type FieldLabelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldLabelResponse) Reset() {
	*x = FieldLabelResponse{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldLabelResponse) ProtoMessage() {}

func (x *FieldLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldLabelResponse.ProtoReflect.Descriptor instead.
func (*FieldLabelResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{1}
}

func (x *FieldLabelResponse) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type SearchFieldRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FieldId       string                 `protobuf:"bytes,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	Search        string                 `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	OmitIds       []string               `protobuf:"bytes,3,rep,name=omit_ids,json=omitIds,proto3" json:"omit_ids,omitempty"`
	Cursor        string                 `protobuf:"bytes,4,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchFieldRequest) Reset() {
	*x = SearchFieldRequest{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFieldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFieldRequest) ProtoMessage() {}

func (x *SearchFieldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFieldRequest.ProtoReflect.Descriptor instead.
func (*SearchFieldRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{2}
}

func (x *SearchFieldRequest) GetFieldId() string {
	if x != nil {
		return x.FieldId
	}
	return ""
}

func (x *SearchFieldRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *SearchFieldRequest) GetOmitIds() []string {
	if x != nil {
		return x.OmitIds
	}
	return nil
}

func (x *SearchFieldRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *SearchFieldRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SearchFieldResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*KeyValue            `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Cursor        string                 `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	HasNextPage   bool                   `protobuf:"varint,3,opt,name=has_next_page,json=hasNextPage,proto3" json:"has_next_page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchFieldResponse) Reset() {
	*x = SearchFieldResponse{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFieldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFieldResponse) ProtoMessage() {}

func (x *SearchFieldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFieldResponse.ProtoReflect.Descriptor instead.
func (*SearchFieldResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{3}
}

func (x *SearchFieldResponse) GetResults() []*KeyValue {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchFieldResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *SearchFieldResponse) GetHasNextPage() bool {
	if x != nil {
		return x.HasNextPage
	}
	return false
}

type MessageStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageStatusRequest) Reset() {
	*x = MessageStatusRequest{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageStatusRequest) ProtoMessage() {}

func (x *MessageStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageStatusRequest.ProtoReflect.Descriptor instead.
func (*MessageStatusRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{4}
}

func (x *MessageStatusRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type MessageStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *SentMessageStatus     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageStatusResponse) Reset() {
	*x = MessageStatusResponse{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageStatusResponse) ProtoMessage() {}

func (x *MessageStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageStatusResponse.ProtoReflect.Descriptor instead.
func (*MessageStatusResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{5}
}

func (x *MessageStatusResponse) GetStatus() *SentMessageStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type SendHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields        []*KeyValue            `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendHeader) Reset() {
	*x = SendHeader{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendHeader) ProtoMessage() {}

func (x *SendHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendHeader.ProtoReflect.Descriptor instead.
func (*SendHeader) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{6}
}

func (x *SendHeader) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SendHeader) GetFields() []*KeyValue {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Entity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entity) Reset() {
	*x = Entity{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{7}
}

func (x *Entity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Entity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Entity) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SentMessageStatus struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	State          SentMessageState       `protobuf:"varint,1,opt,name=state,proto3,enum=goalert.v1.SentMessageState" json:"state,omitempty"`
	Details        string                 `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	Sequence       int64                  `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	SourceValue    string                 `protobuf:"bytes,4,opt,name=source_value,json=sourceValue,proto3" json:"source_value,omitempty"`
	AgeNanoseconds int64                  `protobuf:"varint,5,opt,name=age_nanoseconds,json=ageNanoseconds,proto3" json:"age_nanoseconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SentMessageStatus) Reset() {
	*x = SentMessageStatus{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SentMessageStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentMessageStatus) ProtoMessage() {}

func (x *SentMessageStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentMessageStatus.ProtoReflect.Descriptor instead.
func (*SentMessageStatus) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{8}
}

func (x *SentMessageStatus) GetState() SentMessageState {
	if x != nil {
		return x.State
	}
	return SentMessageState_msg_state_unknown
}

func (x *SentMessageStatus) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *SentMessageStatus) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *SentMessageStatus) GetSourceValue() string {
	if x != nil {
		return x.SourceValue
	}
	return ""
}

func (x *SentMessageStatus) GetAgeNanoseconds() int64 {
	if x != nil {
		return x.AgeNanoseconds
	}
	return 0
}

type SendResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GoalertId     string                 `protobuf:"bytes,1,opt,name=goalert_id,json=goalertId,proto3" json:"goalert_id,omitempty"`
	ProviderId    string                 `protobuf:"bytes,2,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	ExternalId    string                 `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Status        *SentMessageStatus     `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	DestType      string                 `protobuf:"bytes,5,opt,name=dest_type,json=destType,proto3" json:"dest_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendResult) Reset() {
	*x = SendResult{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResult) ProtoMessage() {}

func (x *SendResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResult.ProtoReflect.Descriptor instead.
func (*SendResult) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{9}
}

func (x *SendResult) GetGoalertId() string {
	if x != nil {
		return x.GoalertId
	}
	return ""
}

func (x *SendResult) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *SendResult) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *SendResult) GetStatus() *SentMessageStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SendResult) GetDestType() string {
	if x != nil {
		return x.DestType
	}
	return ""
}

type SendAlertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *SendHeader            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	AlertId       int64                  `protobuf:"varint,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	Summary       string                 `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Details       string                 `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	Service       *Entity                `protobuf:"bytes,5,opt,name=service,proto3" json:"service,omitempty"`
	Meta          []*KeyValue            `protobuf:"bytes,6,rep,name=meta,proto3" json:"meta,omitempty"`
	Original      *SendResult            `protobuf:"bytes,7,opt,name=original,proto3" json:"original,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendAlertRequest) Reset() {
	*x = SendAlertRequest{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAlertRequest) ProtoMessage() {}

func (x *SendAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAlertRequest.ProtoReflect.Descriptor instead.
func (*SendAlertRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{10}
}

func (x *SendAlertRequest) GetHeader() *SendHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SendAlertRequest) GetAlertId() int64 {
	if x != nil {
		return x.AlertId
	}
	return 0
}

func (x *SendAlertRequest) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *SendAlertRequest) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *SendAlertRequest) GetService() *Entity {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *SendAlertRequest) GetMeta() []*KeyValue {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *SendAlertRequest) GetOriginal() *SendResult {
	if x != nil {
		return x.Original
	}
	return nil
}

type SendAlertBundleRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Header            *SendHeader            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Service           *Entity                `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	CurrentAlertCount int64                  `protobuf:"varint,3,opt,name=current_alert_count,json=currentAlertCount,proto3" json:"current_alert_count,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SendAlertBundleRequest) Reset() {
	*x = SendAlertBundleRequest{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendAlertBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAlertBundleRequest) ProtoMessage() {}

func (x *SendAlertBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAlertBundleRequest.ProtoReflect.Descriptor instead.
func (*SendAlertBundleRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{11}
}

func (x *SendAlertBundleRequest) GetHeader() *SendHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SendAlertBundleRequest) GetService() *Entity {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *SendAlertBundleRequest) GetCurrentAlertCount() int64 {
	if x != nil {
		return x.CurrentAlertCount
	}
	return 0
}

type SendAlertStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *SendHeader            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	AlertId       int64                  `protobuf:"varint,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
	LogEntry      string                 `protobuf:"bytes,3,opt,name=log_entry,json=logEntry,proto3" json:"log_entry,omitempty"`
	Service       *Entity                `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	AlertSummary  string                 `protobuf:"bytes,5,opt,name=alert_summary,json=alertSummary,proto3" json:"alert_summary,omitempty"`
	AlertDetails  string                 `protobuf:"bytes,6,opt,name=alert_details,json=alertDetails,proto3" json:"alert_details,omitempty"`
	Original      *SendResult            `protobuf:"bytes,7,opt,name=original,proto3" json:"original,omitempty"`
	NewAlertState AlertState             `protobuf:"varint,8,opt,name=new_alert_state,json=newAlertState,proto3,enum=goalert.v1.AlertState" json:"new_alert_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendAlertStatusRequest) Reset() {
	*x = SendAlertStatusRequest{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendAlertStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAlertStatusRequest) ProtoMessage() {}

func (x *SendAlertStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAlertStatusRequest.ProtoReflect.Descriptor instead.
func (*SendAlertStatusRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{12}
}

func (x *SendAlertStatusRequest) GetHeader() *SendHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SendAlertStatusRequest) GetAlertId() int64 {
	if x != nil {
		return x.AlertId
	}
	return 0
}

func (x *SendAlertStatusRequest) GetLogEntry() string {
	if x != nil {
		return x.LogEntry
	}
	return ""
}

func (x *SendAlertStatusRequest) GetService() *Entity {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *SendAlertStatusRequest) GetAlertSummary() string {
	if x != nil {
		return x.AlertSummary
	}
	return ""
}

func (x *SendAlertStatusRequest) GetAlertDetails() string {
	if x != nil {
		return x.AlertDetails
	}
	return ""
}

func (x *SendAlertStatusRequest) GetOriginal() *SendResult {
	if x != nil {
		return x.Original
	}
	return nil
}

func (x *SendAlertStatusRequest) GetNewAlertState() AlertState {
	if x != nil {
		return x.NewAlertState
	}
	return AlertState_alert_state_unknown
}

type SendSchedOnCallRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *SendHeader            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Schedule      *Entity                `protobuf:"bytes,2,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Users         []*Entity              `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSchedOnCallRequest) Reset() {
	*x = SendSchedOnCallRequest{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSchedOnCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSchedOnCallRequest) ProtoMessage() {}

func (x *SendSchedOnCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSchedOnCallRequest.ProtoReflect.Descriptor instead.
func (*SendSchedOnCallRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{13}
}

func (x *SendSchedOnCallRequest) GetHeader() *SendHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SendSchedOnCallRequest) GetSchedule() *Entity {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *SendSchedOnCallRequest) GetUsers() []*Entity {
	if x != nil {
		return x.Users
	}
	return nil
}

type SendSignalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *SendHeader            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Params        []*KeyValue            `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSignalRequest) Reset() {
	*x = SendSignalRequest{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSignalRequest) ProtoMessage() {}

func (x *SendSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSignalRequest.ProtoReflect.Descriptor instead.
func (*SendSignalRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{14}
}

func (x *SendSignalRequest) GetHeader() *SendHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SendSignalRequest) GetParams() []*KeyValue {
	if x != nil {
		return x.Params
	}
	return nil
}

type SendTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *SendHeader            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendTestRequest) Reset() {
	*x = SendTestRequest{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTestRequest) ProtoMessage() {}

func (x *SendTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTestRequest.ProtoReflect.Descriptor instead.
func (*SendTestRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{15}
}

func (x *SendTestRequest) GetHeader() *SendHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type SendVerificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *SendHeader            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendVerificationRequest) Reset() {
	*x = SendVerificationRequest{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVerificationRequest) ProtoMessage() {}

func (x *SendVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVerificationRequest.ProtoReflect.Descriptor instead.
func (*SendVerificationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{16}
}

func (x *SendVerificationRequest) GetHeader() *SendHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SendVerificationRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	State         SentMessageState       `protobuf:"varint,2,opt,name=state,proto3,enum=goalert.v1.SentMessageState" json:"state,omitempty"`
	StateDetails  string                 `protobuf:"bytes,3,opt,name=state_details,json=stateDetails,proto3" json:"state_details,omitempty"`
	SourceValue   string                 `protobuf:"bytes,4,opt,name=source_value,json=sourceValue,proto3" json:"source_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{17}
}

func (x *SendResponse) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *SendResponse) GetState() SentMessageState {
	if x != nil {
		return x.State
	}
	return SentMessageState_msg_state_unknown
}

func (x *SendResponse) GetStateDetails() string {
	if x != nil {
		return x.StateDetails
	}
	return ""
}

func (x *SendResponse) GetSourceValue() string {
	if x != nil {
		return x.SourceValue
	}
	return ""
}

type ValidateFieldRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Arg           *KeyValue              `protobuf:"bytes,1,opt,name=arg,proto3" json:"arg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateFieldRequest) Reset() {
	*x = ValidateFieldRequest{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateFieldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateFieldRequest) ProtoMessage() {}

func (x *ValidateFieldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateFieldRequest.ProtoReflect.Descriptor instead.
func (*ValidateFieldRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{18}
}

func (x *ValidateFieldRequest) GetArg() *KeyValue {
	if x != nil {
		return x.Arg
	}
	return nil
}

type ValidateFieldResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateFieldResponse) Reset() {
	*x = ValidateFieldResponse{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateFieldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateFieldResponse) ProtoMessage() {}

func (x *ValidateFieldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateFieldResponse.ProtoReflect.Descriptor instead.
func (*ValidateFieldResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{19}
}

func (x *ValidateFieldResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateFieldResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DisplayInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Args          []*KeyValue            `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayInfoRequest) Reset() {
	*x = DisplayInfoRequest{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayInfoRequest) ProtoMessage() {}

func (x *DisplayInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayInfoRequest.ProtoReflect.Descriptor instead.
func (*DisplayInfoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{20}
}

func (x *DisplayInfoRequest) GetArgs() []*KeyValue {
	if x != nil {
		return x.Args
	}
	return nil
}

type DisplayInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	IconUrl       string                 `protobuf:"bytes,2,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	IconAltText   string                 `protobuf:"bytes,3,opt,name=icon_alt_text,json=iconAltText,proto3" json:"icon_alt_text,omitempty"`
	LinkUrl       string                 `protobuf:"bytes,4,opt,name=link_url,json=linkUrl,proto3" json:"link_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayInfoResponse) Reset() {
	*x = DisplayInfoResponse{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayInfoResponse) ProtoMessage() {}

func (x *DisplayInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayInfoResponse.ProtoReflect.Descriptor instead.
func (*DisplayInfoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{21}
}

func (x *DisplayInfoResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *DisplayInfoResponse) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *DisplayInfoResponse) GetIconAltText() string {
	if x != nil {
		return x.IconAltText
	}
	return ""
}

func (x *DisplayInfoResponse) GetLinkUrl() string {
	if x != nil {
		return x.LinkUrl
	}
	return ""
}

type KeyValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{22}
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TypeInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypeInfoRequest) Reset() {
	*x = TypeInfoRequest{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeInfoRequest) ProtoMessage() {}

func (x *TypeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeInfoRequest.ProtoReflect.Descriptor instead.
func (*TypeInfoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{23}
}

type TypeInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TypeInfo      *TypeInfo              `protobuf:"bytes,1,opt,name=type_info,json=typeInfo,proto3" json:"type_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypeInfoResponse) Reset() {
	*x = TypeInfoResponse{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeInfoResponse) ProtoMessage() {}

func (x *TypeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeInfoResponse.ProtoReflect.Descriptor instead.
func (*TypeInfoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{24}
}

func (x *TypeInfoResponse) GetTypeInfo() *TypeInfo {
	if x != nil {
		return x.TypeInfo
	}
	return nil
}

type TypeInfo struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	Type                       string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name                       string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IconUrl                    string                 `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	IconAltText                string                 `protobuf:"bytes,4,opt,name=icon_alt_text,json=iconAltText,proto3" json:"icon_alt_text,omitempty"`
	Enabled                    bool                   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	RequiredFields             []*FieldConfig         `protobuf:"bytes,6,rep,name=required_fields,json=requiredFields,proto3" json:"required_fields,omitempty"`
	DynamicParams              []*DynamicParamConfig  `protobuf:"bytes,7,rep,name=dynamic_params,json=dynamicParams,proto3" json:"dynamic_params,omitempty"`
	UserDisclaimer             string                 `protobuf:"bytes,8,opt,name=user_disclaimer,json=userDisclaimer,proto3" json:"user_disclaimer,omitempty"`
	UserVerificationRequired   bool                   `protobuf:"varint,9,opt,name=user_verification_required,json=userVerificationRequired,proto3" json:"user_verification_required,omitempty"`
	StatusUpdatesRequired      bool                   `protobuf:"varint,10,opt,name=status_updates_required,json=statusUpdatesRequired,proto3" json:"status_updates_required,omitempty"`
	SupportsStatusUpdates      bool                   `protobuf:"varint,11,opt,name=supports_status_updates,json=supportsStatusUpdates,proto3" json:"supports_status_updates,omitempty"`
	SupportsAlertNotifications bool                   `protobuf:"varint,12,opt,name=supports_alert_notifications,json=supportsAlertNotifications,proto3" json:"supports_alert_notifications,omitempty"`
	SupportsUserVerification   bool                   `protobuf:"varint,13,opt,name=supports_user_verification,json=supportsUserVerification,proto3" json:"supports_user_verification,omitempty"`
	SupportsOnCallNotify       bool                   `protobuf:"varint,14,opt,name=supports_on_call_notify,json=supportsOnCallNotify,proto3" json:"supports_on_call_notify,omitempty"`
	SupportsSignals            bool                   `protobuf:"varint,15,opt,name=supports_signals,json=supportsSignals,proto3" json:"supports_signals,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *TypeInfo) Reset() {
	*x = TypeInfo{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeInfo) ProtoMessage() {}

func (x *TypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeInfo.ProtoReflect.Descriptor instead.
func (*TypeInfo) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{25}
}

func (x *TypeInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TypeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TypeInfo) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *TypeInfo) GetIconAltText() string {
	if x != nil {
		return x.IconAltText
	}
	return ""
}

func (x *TypeInfo) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *TypeInfo) GetRequiredFields() []*FieldConfig {
	if x != nil {
		return x.RequiredFields
	}
	return nil
}

func (x *TypeInfo) GetDynamicParams() []*DynamicParamConfig {
	if x != nil {
		return x.DynamicParams
	}
	return nil
}

func (x *TypeInfo) GetUserDisclaimer() string {
	if x != nil {
		return x.UserDisclaimer
	}
	return ""
}

func (x *TypeInfo) GetUserVerificationRequired() bool {
	if x != nil {
		return x.UserVerificationRequired
	}
	return false
}

func (x *TypeInfo) GetStatusUpdatesRequired() bool {
	if x != nil {
		return x.StatusUpdatesRequired
	}
	return false
}

func (x *TypeInfo) GetSupportsStatusUpdates() bool {
	if x != nil {
		return x.SupportsStatusUpdates
	}
	return false
}

func (x *TypeInfo) GetSupportsAlertNotifications() bool {
	if x != nil {
		return x.SupportsAlertNotifications
	}
	return false
}

func (x *TypeInfo) GetSupportsUserVerification() bool {
	if x != nil {
		return x.SupportsUserVerification
	}
	return false
}

func (x *TypeInfo) GetSupportsOnCallNotify() bool {
	if x != nil {
		return x.SupportsOnCallNotify
	}
	return false
}

func (x *TypeInfo) GetSupportsSignals() bool {
	if x != nil {
		return x.SupportsSignals
	}
	return false
}

type FieldConfig struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	FieldId            string                 `protobuf:"bytes,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	Label              string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Hint               string                 `protobuf:"bytes,3,opt,name=hint,proto3" json:"hint,omitempty"`
	HintUrl            string                 `protobuf:"bytes,4,opt,name=hint_url,json=hintUrl,proto3" json:"hint_url,omitempty"`
	PlaceholderText    string                 `protobuf:"bytes,5,opt,name=placeholder_text,json=placeholderText,proto3" json:"placeholder_text,omitempty"`
	Prefix             string                 `protobuf:"bytes,6,opt,name=prefix,proto3" json:"prefix,omitempty"`
	InputType          string                 `protobuf:"bytes,7,opt,name=input_type,json=inputType,proto3" json:"input_type,omitempty"`
	SupportsSearch     bool                   `protobuf:"varint,8,opt,name=supports_search,json=supportsSearch,proto3" json:"supports_search,omitempty"`
	SupportsValidation bool                   `protobuf:"varint,9,opt,name=supports_validation,json=supportsValidation,proto3" json:"supports_validation,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *FieldConfig) Reset() {
	*x = FieldConfig{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldConfig) ProtoMessage() {}

func (x *FieldConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldConfig.ProtoReflect.Descriptor instead.
func (*FieldConfig) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{26}
}

func (x *FieldConfig) GetFieldId() string {
	if x != nil {
		return x.FieldId
	}
	return ""
}

func (x *FieldConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *FieldConfig) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

func (x *FieldConfig) GetHintUrl() string {
	if x != nil {
		return x.HintUrl
	}
	return ""
}

func (x *FieldConfig) GetPlaceholderText() string {
	if x != nil {
		return x.PlaceholderText
	}
	return ""
}

func (x *FieldConfig) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *FieldConfig) GetInputType() string {
	if x != nil {
		return x.InputType
	}
	return ""
}

func (x *FieldConfig) GetSupportsSearch() bool {
	if x != nil {
		return x.SupportsSearch
	}
	return false
}

func (x *FieldConfig) GetSupportsValidation() bool {
	if x != nil {
		return x.SupportsValidation
	}
	return false
}

type DynamicParamConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParamId       string                 `protobuf:"bytes,1,opt,name=param_id,json=paramId,proto3" json:"param_id,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Hint          string                 `protobuf:"bytes,3,opt,name=hint,proto3" json:"hint,omitempty"`
	HintUrl       string                 `protobuf:"bytes,4,opt,name=hint_url,json=hintUrl,proto3" json:"hint_url,omitempty"`
	DefaultValue  string                 `protobuf:"bytes,5,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicParamConfig) Reset() {
	*x = DynamicParamConfig{}
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicParamConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicParamConfig) ProtoMessage() {}

func (x *DynamicParamConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugindest_plugindest_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicParamConfig.ProtoReflect.Descriptor instead.
func (*DynamicParamConfig) Descriptor() ([]byte, []int) {
	return file_pkg_plugindest_plugindest_proto_rawDescGZIP(), []int{27}
}

func (x *DynamicParamConfig) GetParamId() string {
	if x != nil {
		return x.ParamId
	}
	return ""
}

func (x *DynamicParamConfig) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DynamicParamConfig) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

func (x *DynamicParamConfig) GetHintUrl() string {
	if x != nil {
		return x.HintUrl
	}
	return ""
}

func (x *DynamicParamConfig) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

var File_pkg_plugindest_plugindest_proto protoreflect.FileDescriptor

var file_pkg_plugindest_plugindest_proto_rawDesc = string([]byte{
	0x0a, 0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x64, 0x65, 0x73, 0x74,
	0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x64, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x22, 0x3f, 0x0a,
	0x11, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x2a,
	0x0a, 0x12, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x81, 0x01,
	0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x22, 0x0a,
	0x0d, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x22, 0x37, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x15, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4a, 0x0a, 0x0a, 0x53, 0x65,
	0x6e, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x3e, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xc9, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9d, 0x02, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x32, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x08, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x22, 0xa6, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xec, 0x02, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x3e,
	0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0d, 0x6e, 0x65, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa2,
	0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x4f, 0x6e, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x22, 0x71, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x41, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x5d, 0x0a, 0x17, 0x53, 0x65, 0x6e,
	0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x14, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x03, 0x61, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x03, 0x61, 0x72, 0x67, 0x22, 0x43, 0x0a, 0x15, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3e, 0x0a, 0x12, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x13,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x74, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x63, 0x6f, 0x6e, 0x41,
	0x6c, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x72,
	0x6c, 0x22, 0x32, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x09,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xcd, 0x05, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x22, 0x0a, 0x0d, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x63, 0x6f, 0x6e, 0x41, 0x6c, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x40, 0x0a,
	0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x45, 0x0a, 0x0e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x75, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x72, 0x12,
	0x3c, 0x0a, 0x1a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x18, 0x75, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x36, 0x0a,
	0x17, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x1c, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3c, 0x0a, 0x1a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x18, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a,
	0x17, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x4f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x22,
	0xa9, 0x02, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x69, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x69, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x12,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x69, 0x6e, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x69, 0x6e, 0x74, 0x55,
	0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x7b, 0x0a, 0x0a, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x1e,
	0x0a, 0x1a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e,
	0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x10, 0x01, 0x12, 0x1c,
	0x0a, 0x18, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x10, 0x03, 0x2a, 0xd1, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x6d, 0x73, 0x67,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x6d, 0x73, 0x67, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x6e, 0x74,
	0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x6d,
	0x73, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x10,
	0x06, 0x12, 0x15, 0x0a, 0x11, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x10, 0x07, 0x32, 0x9b, 0x08, 0x0a, 0x0a, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x56, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x09, 0x53, 0x65,
	0x6e, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x51, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x6f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x4f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x4f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x53, 0x65,
	0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67,
	0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x67,
	0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a,
	0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x6f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2f, 0x67, 0x6f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x64, 0x65,
	0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pkg_plugindest_plugindest_proto_rawDescOnce sync.Once
	file_pkg_plugindest_plugindest_proto_rawDescData []byte
)

func file_pkg_plugindest_plugindest_proto_rawDescGZIP() []byte {
	file_pkg_plugindest_plugindest_proto_rawDescOnce.Do(func() {
		file_pkg_plugindest_plugindest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_plugindest_plugindest_proto_rawDesc), len(file_pkg_plugindest_plugindest_proto_rawDesc)))
	})
	return file_pkg_plugindest_plugindest_proto_rawDescData
}

var file_pkg_plugindest_plugindest_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_plugindest_plugindest_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_pkg_plugindest_plugindest_proto_goTypes = []any{
	(AlertState)(0),                 // 0: goalert.v1.AlertState
	(SentMessageState)(0),           // 1: goalert.v1.SentMessageState
	(*FieldLabelRequest)(nil),       // 2: goalert.v1.FieldLabelRequest
	(*FieldLabelResponse)(nil),      // 3: goalert.v1.FieldLabelResponse
	(*SearchFieldRequest)(nil),      // 4: goalert.v1.SearchFieldRequest
	(*SearchFieldResponse)(nil),     // 5: goalert.v1.SearchFieldResponse
	(*MessageStatusRequest)(nil),    // 6: goalert.v1.MessageStatusRequest
	(*MessageStatusResponse)(nil),   // 7: goalert.v1.MessageStatusResponse
	(*SendHeader)(nil),              // 8: goalert.v1.SendHeader
	(*Entity)(nil),                  // 9: goalert.v1.Entity
	(*SentMessageStatus)(nil),       // 10: goalert.v1.SentMessageStatus
	(*SendResult)(nil),              // 11: goalert.v1.SendResult
	(*SendAlertRequest)(nil),        // 12: goalert.v1.SendAlertRequest
	(*SendAlertBundleRequest)(nil),  // 13: goalert.v1.SendAlertBundleRequest
	(*SendAlertStatusRequest)(nil),  // 14: goalert.v1.SendAlertStatusRequest
	(*SendSchedOnCallRequest)(nil),  // 15: goalert.v1.SendSchedOnCallRequest
	(*SendSignalRequest)(nil),       // 16: goalert.v1.SendSignalRequest
	(*SendTestRequest)(nil),         // 17: goalert.v1.SendTestRequest
	(*SendVerificationRequest)(nil), // 18: goalert.v1.SendVerificationRequest
	(*SendResponse)(nil),            // 19: goalert.v1.SendResponse
	(*ValidateFieldRequest)(nil),    // 20: goalert.v1.ValidateFieldRequest
	(*ValidateFieldResponse)(nil),   // 21: goalert.v1.ValidateFieldResponse
	(*DisplayInfoRequest)(nil),      // 22: goalert.v1.DisplayInfoRequest
	(*DisplayInfoResponse)(nil),     // 23: goalert.v1.DisplayInfoResponse
	(*KeyValue)(nil),                // 24: goalert.v1.KeyValue
	(*TypeInfoRequest)(nil),         // 25: goalert.v1.TypeInfoRequest
	(*TypeInfoResponse)(nil),        // 26: goalert.v1.TypeInfoResponse
	(*TypeInfo)(nil),                // 27: goalert.v1.TypeInfo
	(*FieldConfig)(nil),             // 28: goalert.v1.FieldConfig
	(*DynamicParamConfig)(nil),      // 29: goalert.v1.DynamicParamConfig
}
var file_pkg_plugindest_plugindest_proto_depIdxs = []int32{
	24, // 0: goalert.v1.FieldLabelRequest.field:type_name -> goalert.v1.KeyValue
	24, // 1: goalert.v1.SearchFieldResponse.results:type_name -> goalert.v1.KeyValue
	10, // 2: goalert.v1.MessageStatusResponse.status:type_name -> goalert.v1.SentMessageStatus
	24, // 3: goalert.v1.SendHeader.fields:type_name -> goalert.v1.KeyValue
	1,  // 4: goalert.v1.SentMessageStatus.state:type_name -> goalert.v1.SentMessageState
	10, // 5: goalert.v1.SendResult.status:type_name -> goalert.v1.SentMessageStatus
	8,  // 6: goalert.v1.SendAlertRequest.header:type_name -> goalert.v1.SendHeader
	9,  // 7: goalert.v1.SendAlertRequest.service:type_name -> goalert.v1.Entity
	24, // 8: goalert.v1.SendAlertRequest.meta:type_name -> goalert.v1.KeyValue
	11, // 9: goalert.v1.SendAlertRequest.original:type_name -> goalert.v1.SendResult
	8,  // 10: goalert.v1.SendAlertBundleRequest.header:type_name -> goalert.v1.SendHeader
	9,  // 11: goalert.v1.SendAlertBundleRequest.service:type_name -> goalert.v1.Entity
	8,  // 12: goalert.v1.SendAlertStatusRequest.header:type_name -> goalert.v1.SendHeader
	9,  // 13: goalert.v1.SendAlertStatusRequest.service:type_name -> goalert.v1.Entity
	11, // 14: goalert.v1.SendAlertStatusRequest.original:type_name -> goalert.v1.SendResult
	0,  // 15: goalert.v1.SendAlertStatusRequest.new_alert_state:type_name -> goalert.v1.AlertState
	8,  // 16: goalert.v1.SendSchedOnCallRequest.header:type_name -> goalert.v1.SendHeader
	9,  // 17: goalert.v1.SendSchedOnCallRequest.schedule:type_name -> goalert.v1.Entity
	9,  // 18: goalert.v1.SendSchedOnCallRequest.users:type_name -> goalert.v1.Entity
	8,  // 19: goalert.v1.SendSignalRequest.header:type_name -> goalert.v1.SendHeader
	24, // 20: goalert.v1.SendSignalRequest.params:type_name -> goalert.v1.KeyValue
	8,  // 21: goalert.v1.SendTestRequest.header:type_name -> goalert.v1.SendHeader
	8,  // 22: goalert.v1.SendVerificationRequest.header:type_name -> goalert.v1.SendHeader
	1,  // 23: goalert.v1.SendResponse.state:type_name -> goalert.v1.SentMessageState
	24, // 24: goalert.v1.ValidateFieldRequest.arg:type_name -> goalert.v1.KeyValue
	24, // 25: goalert.v1.DisplayInfoRequest.args:type_name -> goalert.v1.KeyValue
	27, // 26: goalert.v1.TypeInfoResponse.type_info:type_name -> goalert.v1.TypeInfo
	28, // 27: goalert.v1.TypeInfo.required_fields:type_name -> goalert.v1.FieldConfig
	29, // 28: goalert.v1.TypeInfo.dynamic_params:type_name -> goalert.v1.DynamicParamConfig
	25, // 29: goalert.v1.PluginDest.TypeInfo:input_type -> goalert.v1.TypeInfoRequest
	20, // 30: goalert.v1.PluginDest.ValidateField:input_type -> goalert.v1.ValidateFieldRequest
	22, // 31: goalert.v1.PluginDest.DisplayInfo:input_type -> goalert.v1.DisplayInfoRequest
	12, // 32: goalert.v1.PluginDest.SendAlert:input_type -> goalert.v1.SendAlertRequest
	13, // 33: goalert.v1.PluginDest.SendAlertBundle:input_type -> goalert.v1.SendAlertBundleRequest
	14, // 34: goalert.v1.PluginDest.SendAlertStatus:input_type -> goalert.v1.SendAlertStatusRequest
	15, // 35: goalert.v1.PluginDest.SendSchedOnCall:input_type -> goalert.v1.SendSchedOnCallRequest
	16, // 36: goalert.v1.PluginDest.SendSignal:input_type -> goalert.v1.SendSignalRequest
	17, // 37: goalert.v1.PluginDest.SendTest:input_type -> goalert.v1.SendTestRequest
	18, // 38: goalert.v1.PluginDest.SendVerification:input_type -> goalert.v1.SendVerificationRequest
	6,  // 39: goalert.v1.PluginDest.MessageStatus:input_type -> goalert.v1.MessageStatusRequest
	4,  // 40: goalert.v1.PluginDest.SearchField:input_type -> goalert.v1.SearchFieldRequest
	2,  // 41: goalert.v1.PluginDest.FieldLabel:input_type -> goalert.v1.FieldLabelRequest
	26, // 42: goalert.v1.PluginDest.TypeInfo:output_type -> goalert.v1.TypeInfoResponse
	21, // 43: goalert.v1.PluginDest.ValidateField:output_type -> goalert.v1.ValidateFieldResponse
	23, // 44: goalert.v1.PluginDest.DisplayInfo:output_type -> goalert.v1.DisplayInfoResponse
	19, // 45: goalert.v1.PluginDest.SendAlert:output_type -> goalert.v1.SendResponse
	19, // 46: goalert.v1.PluginDest.SendAlertBundle:output_type -> goalert.v1.SendResponse
	19, // 47: goalert.v1.PluginDest.SendAlertStatus:output_type -> goalert.v1.SendResponse
	19, // 48: goalert.v1.PluginDest.SendSchedOnCall:output_type -> goalert.v1.SendResponse
	19, // 49: goalert.v1.PluginDest.SendSignal:output_type -> goalert.v1.SendResponse
	19, // 50: goalert.v1.PluginDest.SendTest:output_type -> goalert.v1.SendResponse
	19, // 51: goalert.v1.PluginDest.SendVerification:output_type -> goalert.v1.SendResponse
	7,  // 52: goalert.v1.PluginDest.MessageStatus:output_type -> goalert.v1.MessageStatusResponse
	5,  // 53: goalert.v1.PluginDest.SearchField:output_type -> goalert.v1.SearchFieldResponse
	3,  // 54: goalert.v1.PluginDest.FieldLabel:output_type -> goalert.v1.FieldLabelResponse
	42, // [42:55] is the sub-list for method output_type
	29, // [29:42] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_pkg_plugindest_plugindest_proto_init() }
func file_pkg_plugindest_plugindest_proto_init() {
	if File_pkg_plugindest_plugindest_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_plugindest_plugindest_proto_rawDesc), len(file_pkg_plugindest_plugindest_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_plugindest_plugindest_proto_goTypes,
		DependencyIndexes: file_pkg_plugindest_plugindest_proto_depIdxs,
		EnumInfos:         file_pkg_plugindest_plugindest_proto_enumTypes,
		MessageInfos:      file_pkg_plugindest_plugindest_proto_msgTypes,
	}.Build()
	File_pkg_plugindest_plugindest_proto = out.File
	file_pkg_plugindest_plugindest_proto_goTypes = nil
	file_pkg_plugindest_plugindest_proto_depIdxs = nil
}
